# Default values for rookout on-premise components.
# For more information head to https://docs.rookout.com/

# -- Secrets with credentials to pull images from a private registry. Registry secret names as an array.
imagePullSecrets: []

#######################################################
#############Rookout common configuration##############
#######################################################

# Map of rookout configurations.
rookout:
  # -- Your Rookout organization token. Get it from the Rookout app at https://app.rookout.com/. 
  # -- Please notice that the usage of token directly should be by --set flag in cli only when helming.
  # -- helm install rookout rookout/rookout-hybrid --set rookout.token="YOUR_TOKEN"
  # -- using rookout.token will create secret that mounts as ENV variable into the pods.
  token: 

  # -- The Rookout organization token can be pass from refrenced existing secret
  # -- can be create with `kubectl create secret generic rookout-token --from-literal=token=YOUR_TOKEN`
  # -- then fill rookout.tokenExistingSecret: rookout-token
  # -- NOTICE: the key of the secret should be named `token`
  tokenExistingSecret: #rookout-token

  # -- Rookout's components communication mode, PLAIN or TLS.
  # For TLS, please check rookout.controllerTLSSecretName and rookut.datastoreTLSSecretName
  serverMode: "PLAIN"
  
  # When using serverMode: "TLS", the components (Controller and Datastore) will only accept encrypted TLS connections.
  # In that case, for each component deployed, a secret containing a key and certificate (as "tls.key" and "tls.crt")
  # should be injected to the namespace of the deployment.
  # The name of those secrets should be set as "rookout.controllerTLSSecretName" and "rookout.datastoreTLSSecretName".

  # -- Rookout's controller TLS secert used when rookout.serverMode: "TLS"
  # The components expect to find "tls.key" and "tls.crt" keys in the secert
  controllerTLSSecretName: ""

  # -- Rookout's datastore TLS secert used when rookout.serverMode: "TLS"
  # The components expect to find "tls.key" and "tls.crt" keys in the secert
  datastoreTLSSecretName: ""


#######################################################
#####################ETL Controller####################
#######################################################
# https://docs.rookout.com/docs/etl-controller-intro

controller:
  # -- Whether to deploy an ETL Controller
  enabled: true
  # -- Rookout's controller number of replicas
  replicaCount: 1

  image:
    # -- Rookout's controller image name
    name: controller
    # -- Rookout's controller public dockerhub repo
    repository: rookout
    # -- Rookout's controller image pull policy
    pullPolicy: Always
    # -- Rookout's controller image tag
    tag: latest

  # -- String to partially override "controller.fullname" template
  nameOverride: ""

  # -- String to fully override "controller.fullname" template
  fullnameOverride: ""

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations to be added to the Controller pods
  podAnnotations: {}

  # -- Security Context to set on the pod level
  podSecurityContext: 
    fsGroup: 5000
    runAsUser: 5000
    runAsGroup: 5000

  # -- Security Context to set on the container level
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 5000

  service:
     # -- Sets the type of the Service
    type: ClusterIP
    # -- Service port
    # For TLS mode change the port to 443
    port: 80
    #nodePort:
    # -- Controller service extra labels
    labels: {}
    # -- Controller service extra annotations
    annotations: {}

  ingress:
    # -- Enable controller ingress support
    enabled: false
    # -- Controller ingress class name
    className: ""
    # -- Controller ingress annotations
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    
    # -- Controller ingress hosts
    ## Hostnames must be provided if Ingress is enabled.
    hosts:
      - host: controller.rookout.example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    # -- Controller ingress tls
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- Additional environment variables for Rookout's controller. A list of name/value maps.
  extraEnv: []

  # -- Resource limits and requests for the controller pods.
  resources: 
    limits:
      cpu: 2
      memory: 4096Mi
    requests:
      cpu: 1
      memory: 512Mi

  # -- [Node selector]
  nodeSelector: {}

  # -- [Tolerations] for use with node taints
  tolerations: []

  # -- Assign custom [affinity] rules to the deployment
  affinity: {}

  # -- Deployment and pods extra labels
  extraLabels: {}


#######################################################
##################Rookout Datastore####################
#######################################################
# https://docs.rookout.com/docs/dop-intro

datastore:
   # -- whether to deploy a Datastore
  enabled: true

   # -- whether to enable the new DAO wrappers for the datastore
  enableNewDao: false

  image:
    # -- Rookout's Datastore image name
    name: data-on-prem
     # -- Rookout's Datastore public dockerhub repo
    repository: rookout
    # -- Rookout's Datastore image pull policy
    pullPolicy: Always
    # -- Rookout's Datastore image tag
    tag: latest

  
  # -- String to partially override "datastore.fullname" template
  nameOverride: ""

  # -- String to fully override "datastore.fullname" template
  fullnameOverride: ""

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # -- Annotations to be added to the Datastore pods
  podAnnotations: {}

  # -- Security Context to set on the pod level
  podSecurityContext: 
    fsGroup: 5000
    runAsUser: 5000
    runAsGroup: 5000

  # -- Security Context to set on the container level
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 5000

  service:
    # -- Sets the type of the Service
    type: ClusterIP
    # -- Service port
    # For TLS mode change the port to 443
    port: 80
    #nodePort:
    # -- Datastore service extra labels
    labels: {}
    # -- Datastore service extra annotations
    annotations: {}

  ingress:
    # -- Enable datastore ingress support
    enabled: false
    # -- Datastore ingress class name
    className: ""
    # -- Datastore ingress annotations
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    
    # -- Datastore ingress hosts
    ## Hostnames must be provided if Ingress is enabled.
    hosts:
      - host: datastore.rookout.example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    # -- Datastore ingress tls
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  # -- Additional environment variables for Rookout's datastore. A list of name/value maps.
  extraEnv: []

  # -- Resource limits and requests for the datastore pods.
  resources: 
    limits:
      cpu: 2
      memory: 4096Mi
    requests:
      cpu: 2
      memory: 4096Mi

  # -- [Node selector]
  nodeSelector: {}

  # -- [Tolerations] for use with node taints
  tolerations: []

  # -- Assign custom [affinity] rules to the deployment
  affinity: {}

  # -- Additional Deployment and Pods extra labels
  extraLabels: {}
